[{"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\index.js":"1","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\reportWebVitals.js":"2","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\App.js":"3","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\WorkoutComponent.jsx":"4","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\LiftComponent.jsx":"5","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\PickWorkoutComponent.jsx":"6","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\WorkoutCard.jsx":"7","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\ProgressionDashboard.jsx":"8"},{"size":500,"mtime":1609956271945,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":642,"mtime":1610117815305,"results":"12","hashOfConfig":"10"},{"size":1121,"mtime":1610059749077,"results":"13","hashOfConfig":"10"},{"size":3401,"mtime":1610059749074,"results":"14","hashOfConfig":"10"},{"size":2081,"mtime":1610059749075,"results":"15","hashOfConfig":"10"},{"size":356,"mtime":1609948886944,"results":"16","hashOfConfig":"10"},{"size":645,"mtime":1610119081824,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1k719qw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\index.js",[],["37","38"],"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\reportWebVitals.js",[],"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\App.js",[],"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\WorkoutComponent.jsx",[],"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\LiftComponent.jsx",["39","40"],"import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport stylesheet from '../assets/LiftComponent.css'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass LiftComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      Title: props.title,\r\n      Sets: props.sets,\r\n      Reps: props.reps,\r\n      Weight: props.weight,\r\n      Notes: props.notes,\r\n      WorkoutLiftLogID: props.WorkoutLiftLogID,\r\n      successfullySaved: false,\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //textbox handlers\r\nhandleSetsChange = (e) => {\r\n  this.setState({Sets: e.target.value})\r\n}\r\nhandleRepsChange = (e) => {\r\n  this.setState({Reps: e.target.value})\r\n}\r\nhandleWeightChange = (e) => {\r\n  this.setState({Weight: e.target.value})\r\n}\r\nhandleNotesChange = (e) => {\r\n  this.setState({Notes: e.target.value})\r\n}\r\nhandleSaveLift = async () =>{\r\n  var today = new Date();\r\n  var updatedLift = {\r\n    WorkoutLiftLogID: this.state.WorkoutLiftLogID,\r\n    Sets: this.state.Sets,\r\n    Reps: this.state.Reps,\r\n    Weight: this.state.Weight,\r\n    Notes: this.state.Notes,\r\n    Date: today\r\n  }\r\n  var response = await axios.put('/api/workoutliftlog', updatedLift, null);\r\n  if(response.data === \"Fail\")\r\n  {\r\n    this.setState({successfullySaved: false});\r\n  }\r\n  else{\r\n    this.setState({successfullySaved: true});\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n  const{Title, Sets, Reps, Weight, Notes, successfullySaved} = this.state;\r\n\r\n  const redDot = (\r\n    <span className=\"redDot\"/>\r\n  )\r\n  const greenDot = (\r\n    <span className=\"greenDot\"/>\r\n  )\r\n    return (\r\n        <Form>\r\n        <Form.Group as={Row}>\r\n          <Col xs={8}>\r\n          <Form.Label> <h4>{Title}:</h4> </Form.Label> \r\n          </Col>\r\n          <Col xs={1}>\r\n          {successfullySaved === false ? redDot : greenDot}\r\n          </Col>\r\n        </Form.Group>\r\n            \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Sets:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleSetsChange} value={Sets}/>\r\n          </Col>\r\n        </Form.Group>\r\n      \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Reps:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleRepsChange} value={Reps} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Weight:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleWeightChange} value={Weight} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Notes:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control type=\"textarea\" onChange={this.handleNotesChange} value={Notes} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col>\r\n            <Button column xs={6} variant=\"success\" onClick={this.handleSaveLift}>\r\n            Save {Title}\r\n          </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default LiftComponent;","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\PickWorkoutComponent.jsx",["41"],"import React, {Component} from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport WorkoutCard from './WorkoutCard'\r\nimport WorkoutComponent from './WorkoutComponent'\r\n\r\nclass PickWorkoutComponent extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n    workoutList: [],\r\n    selectedWorkoutTitle:null,\r\n    selectedWorkoutID: null,\r\n    showSelectedWorkoutComponent: false,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/workouts');\r\n    this.setState({workoutList: response.data});\r\n   \r\n\r\n }\r\n\r\n handleCardClick = (e, workoutTitle, id) => {\r\n    this.setState({\r\n        selectedWorkoutTitle: workoutTitle,\r\n        selectedWorkoutID: id,\r\n        showSelectedWorkoutComponent: true,\r\n    })\r\n\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    const {workoutList, selectedWorkoutID, selectedWorkoutTitle, showSelectedWorkoutComponent} = this.state;\r\n    var workoutCards = {};\r\n\r\n    if(workoutList){\r\n      var workoutCards = workoutList.map((workout) => {\r\n        return(\r\n          <div>\r\n          <WorkoutCard key={workout.workoutid} id={workout.workoutid} title={workout.title} handleCardClick={this.handleCardClick}/>\r\n          <br/>\r\n          </div>\r\n      )\r\n    })\r\n    }\r\n   \r\n\r\n    let View;\r\n    //If a workout has not yet been selected, display our View as the options to select.\r\n    if(showSelectedWorkoutComponent === false)\r\n    {\r\n        View = ( \r\n        <div>\r\n        <h1>Select a Workout</h1>\r\n        {workoutCards.length > 0 ? workoutCards : null} \r\n        </div>) \r\n    }\r\n    else{ //Once a workout has been selected, display the Workout component in our view.\r\n        View = (\r\n            <WorkoutComponent key={selectedWorkoutID} id={selectedWorkoutID} workoutTitle={selectedWorkoutTitle}/>\r\n        ) \r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Container>\r\n      {showSelectedWorkoutComponent !== null ? View : null}\r\n      </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PickWorkoutComponent;","C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\WorkoutCard.jsx",[],"C:\\Users\\chdez\\Desktop\\Weightlifting Log Project\\WeightliftingTracker\\src\\Components\\ProgressionDashboard.jsx",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":8,"column":10,"nodeType":"49","messageId":"50","endLine":8,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":43,"column":11,"nodeType":"49","messageId":"54","endLine":43,"endColumn":23},{"ruleId":"47","severity":1,"message":"55","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":21},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'stylesheet' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-redeclare","'workoutCards' is already defined.","redeclared","'LiftComponent' is defined but never used.","no-global-assign","no-unsafe-negation"]