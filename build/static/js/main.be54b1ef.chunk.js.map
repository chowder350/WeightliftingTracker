{"version":3,"sources":["Components/WorkoutCard.jsx","Components/LiftComponent.jsx","Components/WorkoutComponent.jsx","Components/PickWorkoutComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["WorkoutCard","props","Card","onClick","e","handleCardClick","title","id","Body","Title","style","color","LiftComponent","handleSetsChange","setState","Sets","target","value","handleRepsChange","Reps","handleWeightChange","Weight","handleNotesChange","Notes","handleSaveLift","a","today","Date","updatedLift","WorkoutLiftLogID","state","axios","put","data","successfullySaved","sets","reps","weight","notes","this","redDot","className","greenDot","Form","Group","as","Row","Col","xs","Label","column","Control","onChange","type","Button","variant","Component","WorkoutComponent","componentDidMount","get","response","liftData","recordset","selectedWorkoutID","liftList","map","lift","WorkoutID","LiftTitle","Container","workoutTitle","PickWorkoutComponent","workoutList","selectedWorkoutTitle","showSelectedWorkoutComponent","View","workoutCards","workout","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be54b1ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction WorkoutCard(props) {\r\n  return (  \r\n    <Card onClick={(e) => props.handleCardClick(e, props.title, props.id)}>\r\n    <Card.Body>\r\n    <Card.Title style={{color: 'black'}}> {props.title} </Card.Title>\r\n    </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WorkoutCard;\r\n","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport stylesheet from '../assets/LiftComponent.css'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass LiftComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      Title: props.title,\r\n      Sets: props.sets,\r\n      Reps: props.reps,\r\n      Weight: props.weight,\r\n      Notes: props.notes,\r\n      WorkoutLiftLogID: props.WorkoutLiftLogID,\r\n      successfullySaved: false,\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //textbox handlers\r\nhandleSetsChange = (e) => {\r\n  this.setState({Sets: e.target.value})\r\n}\r\nhandleRepsChange = (e) => {\r\n  this.setState({Reps: e.target.value})\r\n}\r\nhandleWeightChange = (e) => {\r\n  this.setState({Weight: e.target.value})\r\n}\r\nhandleNotesChange = (e) => {\r\n  this.setState({Notes: e.target.value})\r\n}\r\nhandleSaveLift = async () =>{\r\n  var today = new Date();\r\n  var updatedLift = {\r\n    WorkoutLiftLogID: this.state.WorkoutLiftLogID,\r\n    Sets: this.state.Sets,\r\n    Reps: this.state.Reps,\r\n    Weight: this.state.Weight,\r\n    Notes: this.state.Notes,\r\n    Date: today\r\n  }\r\n  var response = await axios.put('/api/workoutliftlog', updatedLift, null);\r\n  if(response.data === \"Fail\")\r\n  {\r\n    this.setState({successfullySaved: false});\r\n  }\r\n  else{\r\n    this.setState({successfullySaved: true});\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n  const{Title, Sets, Reps, Weight, Notes, successfullySaved} = this.state;\r\n\r\n  const redDot = (\r\n    <span className=\"redDot\"/>\r\n  )\r\n  const greenDot = (\r\n    <span className=\"greenDot\"/>\r\n  )\r\n    return (\r\n        <Form>\r\n        <Form.Group as={Row}>\r\n          <Col xs={8}>\r\n          <Form.Label> <h4>{Title}:</h4> </Form.Label> \r\n          </Col>\r\n          <Col xs={1}>\r\n          {successfullySaved === false ? redDot : greenDot}\r\n          </Col>\r\n        </Form.Group>\r\n            \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Sets:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleSetsChange} value={Sets}/>\r\n          </Col>\r\n        </Form.Group>\r\n      \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Reps:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleRepsChange} value={Reps} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Weight:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleWeightChange} value={Weight} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Notes:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control type=\"textarea\" onChange={this.handleNotesChange} value={Notes} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col>\r\n            <Button column xs={6} variant=\"success\" onClick={this.handleSaveLift}>\r\n            Save {Title}\r\n          </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default LiftComponent;","import React, {Component} from 'react';\r\nimport LiftComponent from './LiftComponent';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass WorkoutComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    liftData: [],\r\n    selectedWorkoutID: this.props.id,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/liftdata');\r\n    this.setState({\r\n      liftData: response.data.recordset });\r\n   \r\n\r\n }\r\n \r\n  render() {\r\n    const {liftData, selectedWorkoutID} = this.state;\r\n\r\n  const liftList = liftData.map((lift) => {\r\n    return(\r\n     lift.WorkoutID === selectedWorkoutID ?\r\n      <LiftComponent key={lift.WorkoutLiftLogID} WorkoutLiftLogID={lift.WorkoutLiftLogID} title={lift.LiftTitle} sets={lift.Sets} reps={lift.Reps} weight={lift.Weight} notes={lift.Notes}/> : null\r\n      \r\n    )\r\n  })\r\n    return (\r\n      <>\r\n      <Container>\r\n        <h1>{this.props.workoutTitle}</h1>\r\n        {liftList}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WorkoutComponent;","import React, {Component} from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport WorkoutCard from './WorkoutCard'\r\nimport WorkoutComponent from './WorkoutComponent'\r\n\r\nclass PickWorkoutComponent extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n    workoutList: [],\r\n    selectedWorkoutTitle:null,\r\n    selectedWorkoutID: null,\r\n    showSelectedWorkoutComponent: false,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/workouts');\r\n    this.setState({workoutList: response.data.recordset});\r\n   \r\n\r\n }\r\n\r\n handleCardClick = (e, workoutTitle, id) => {\r\n    this.setState({\r\n        selectedWorkoutTitle: workoutTitle,\r\n        selectedWorkoutID: id,\r\n        showSelectedWorkoutComponent: true,\r\n    })\r\n\r\n  }\r\n \r\n  render() {\r\n    const {workoutList, selectedWorkoutID, selectedWorkoutTitle, showSelectedWorkoutComponent} = this.state;\r\n\r\n  const workoutCards = workoutList.map((workout) => {\r\n      return(\r\n        <div>\r\n        <WorkoutCard key={workout.WorkoutID} id={workout.WorkoutID} title={workout.Title} handleCardClick={this.handleCardClick}/>\r\n        <br/>\r\n        </div>\r\n    )\r\n })\r\n\r\n    let View;\r\n    //If a workout has not yet been selected, display our View as the options to select.\r\n    if(showSelectedWorkoutComponent === false)\r\n    {\r\n        View = ( \r\n        <div>\r\n        <h1>Select a Workout</h1>\r\n        {workoutCards.length > 0 ? workoutCards : null} \r\n        </div>) \r\n    }\r\n    else{ //Once a workout has been selected, display the Workout component in our view.\r\n        View = (\r\n            <WorkoutComponent key={selectedWorkoutID} id={selectedWorkoutID} workoutTitle={selectedWorkoutTitle}/>\r\n        ) \r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Container>\r\n      {showSelectedWorkoutComponent !== null ? View : null}\r\n      </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PickWorkoutComponent;","\r\nimport './App.css';\r\nimport PickWorkoutComponent from './Components/PickWorkoutComponent'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={PickWorkoutComponent}/>\r\n          </Switch>\r\n        </Router>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}