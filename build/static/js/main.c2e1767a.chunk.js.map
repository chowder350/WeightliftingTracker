{"version":3,"sources":["Components/WorkoutCard.jsx","Components/LiftComponent.jsx","Components/WorkoutComponent.jsx","Components/PickWorkoutComponent.jsx","Components/ProgressionChart.jsx","Components/ProgressionDashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["WorkoutCard","props","Card","onClick","e","handleCardClick","title","id","Body","Title","style","color","LiftComponent","handleSetsChange","setState","Sets","target","value","handleRepsChange","Reps","handleWeightChange","Weight","handleNotesChange","Notes","handleSaveLift","a","today","Date","updatedLift","WorkoutLiftLogID","state","axios","put","response","console","log","data","successfullySaved","sets","reps","weight","notes","this","redDot","className","greenDot","Form","Group","as","Row","Col","xs","Label","column","Control","onChange","type","Button","variant","Component","WorkoutComponent","componentDidMount","get","liftData","selectedWorkoutID","liftList","map","lift","workoutid","key","workoutliftlogid","lifttitle","Container","workoutTitle","PickWorkoutComponent","workoutList","selectedWorkoutTitle","showSelectedWorkoutComponent","View","workoutCards","Array","from","length","workout","legend","display","position","labels","fontColor","fontSize","options","scales","yAxes","ticks","suggestedMin","suggestedMax","ProgressionChart","responsive","ProgressionDashboard","historicallogresponse","countoflifts","historicalLifts","count","groupLiftData","LiftLogData","x","filterResponses","push","liftLogData","filter","liftid","ProgressionCharts","liftdates","liftdata","y","date","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2e1767a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction WorkoutCard(props) {\r\n  return (  \r\n    <Card onClick={(e) => props.handleCardClick(e, props.title, props.id)}>\r\n    <Card.Body>\r\n    <Card.Title style={{color: 'black'}}> {props.title} </Card.Title>\r\n    </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WorkoutCard;\r\n","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport stylesheet from '../assets/LiftComponent.css'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass LiftComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      Title: props.title,\r\n      Sets: props.sets,\r\n      Reps: props.reps,\r\n      Weight: props.weight,\r\n      Notes: props.notes,\r\n      WorkoutLiftLogID: props.WorkoutLiftLogID,\r\n      successfullySaved: false,\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //textbox handlers\r\nhandleSetsChange = (e) => {\r\n  this.setState({Sets: e.target.value})\r\n}\r\nhandleRepsChange = (e) => {\r\n  this.setState({Reps: e.target.value})\r\n}\r\nhandleWeightChange = (e) => {\r\n  this.setState({Weight: e.target.value})\r\n}\r\nhandleNotesChange = (e) => {\r\n  this.setState({Notes: e.target.value})\r\n}\r\nhandleSaveLift = async () =>{\r\n  var today = new Date();\r\n  var updatedLift = {\r\n    WorkoutLiftLogID: this.state.WorkoutLiftLogID,\r\n    Sets: this.state.Sets,\r\n    Reps: this.state.Reps,\r\n    Weight: this.state.Weight,\r\n    Notes: this.state.Notes,\r\n    Date: today\r\n  }\r\n  var response = await axios.put('/api/workoutliftlog', updatedLift, null);\r\n  console.log(response);\r\n  if(response.data === \"success\")\r\n  {\r\n    this.setState({successfullySaved: true});\r\n  }\r\n  else{\r\n    this.setState({successfullySaved: false});\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n  const{Title, Sets, Reps, Weight, Notes, successfullySaved} = this.state;\r\n\r\n  const redDot = (\r\n    <span className=\"redDot\"/>\r\n  )\r\n  const greenDot = (\r\n    <span className=\"greenDot\"/>\r\n  )\r\n    return (\r\n        <Form>\r\n        <Form.Group as={Row}>\r\n          <Col xs={8}>\r\n          <Form.Label> <h4>{Title}:</h4> </Form.Label> \r\n          </Col>\r\n          <Col xs={1}>\r\n          {successfullySaved === false ? redDot : greenDot}\r\n          </Col>\r\n        </Form.Group>\r\n            \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Sets:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleSetsChange} value={Sets}/>\r\n          </Col>\r\n        </Form.Group>\r\n      \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Reps:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleRepsChange} value={Reps} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Weight:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleWeightChange} value={Weight} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Notes:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control type=\"textarea\" onChange={this.handleNotesChange} value={Notes} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col>\r\n            <Button column xs={6} variant=\"success\" onClick={this.handleSaveLift}>\r\n            Save {Title}\r\n          </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default LiftComponent;","import React, {Component} from 'react';\r\nimport LiftComponent from './LiftComponent';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass WorkoutComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    liftData: [],\r\n    selectedWorkoutID: this.props.id,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/liftdata');\r\n    this.setState({liftData: response.data});\r\n }\r\n \r\n  render() {\r\n    const {liftData, selectedWorkoutID} = this.state;\r\n\r\n  const liftList = liftData.map((lift) => {\r\n    return(\r\n     lift.workoutid === selectedWorkoutID ?\r\n      <LiftComponent key={lift.workoutliftlogid} WorkoutLiftLogID={lift.workoutliftlogid} title={lift.lifttitle} sets={lift.sets} reps={lift.reps} weight={lift.weight} notes={lift.notes}/> : null\r\n      \r\n    )\r\n  })\r\n    return (\r\n      <>\r\n      <Container>\r\n        <h1>{this.props.workoutTitle}</h1>\r\n        {liftList}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WorkoutComponent;","import React, {Component} from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport WorkoutCard from './WorkoutCard'\r\nimport WorkoutComponent from './WorkoutComponent'\r\n\r\nclass PickWorkoutComponent extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n    workoutList: [],\r\n    selectedWorkoutTitle:null,\r\n    selectedWorkoutID: null,\r\n    showSelectedWorkoutComponent: false,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/workouts');\r\n    this.setState({workoutList: response.data});\r\n   \r\n\r\n }\r\n\r\n handleCardClick = (e, workoutTitle, id) => {\r\n    this.setState({\r\n        selectedWorkoutTitle: workoutTitle,\r\n        selectedWorkoutID: id,\r\n        showSelectedWorkoutComponent: true,\r\n    })\r\n\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    const {selectedWorkoutID, selectedWorkoutTitle, showSelectedWorkoutComponent} = this.state;\r\n    var workoutCards = [];\r\n    var workoutList = Array.from(this.state.workoutList);\r\n    console.log(workoutList)\r\n\r\n    if(workoutList.length > 0){\r\n      workoutCards = workoutList.map((workout) => {\r\n        return(\r\n          <div>\r\n          <WorkoutCard key={workout.workoutid} id={workout.workoutid} title={workout.title} handleCardClick={this.handleCardClick}/>\r\n          <br/>\r\n          </div>\r\n      )\r\n    })\r\n    }\r\n    console.log(workoutCards)\r\n   \r\n\r\n    let View;\r\n    //If a workout has not yet been selected, display our View as the options to select.\r\n    if(showSelectedWorkoutComponent === false)\r\n    {\r\n        View = ( \r\n        <div>\r\n        <h1>Select a Workout</h1>\r\n        {workoutCards.length > 0 ? workoutCards : null} \r\n        </div>) \r\n    }\r\n    else{ //Once a workout has been selected, display the Workout component in our view.\r\n        View = (\r\n            <WorkoutComponent key={selectedWorkoutID} id={selectedWorkoutID} workoutTitle={selectedWorkoutTitle}/>\r\n        ) \r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Container>\r\n      {showSelectedWorkoutComponent !== null ? View : null}\r\n      </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PickWorkoutComponent;","import React, {Component} from 'react'\r\nimport {Line}  from \"react-chartjs-2\";\r\nimport {Container} from 'react-bootstrap';\r\n\r\nconst legend = {\r\n  display: true,\r\n  position: \"bottom\",\r\n  labels: {\r\n    fontColor: \"#FFFFFF\",\r\n    fontSize: 14\r\n  }\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          suggestedMin: 100,\r\n          suggestedMax: 100\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nfunction ProgressionChart(props) {\r\n  return (\r\n    <Container>\r\n      <h3 className=\"mt-5\">{props.title}</h3>\r\n      <Line data={props.data} options={{ responsive: true }} legend={legend} options={options}/>\r\n    </Container>\r\n  )\r\n}\r\n    \r\n\r\nexport default ProgressionChart;","import React, {Component} from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ProgressionChart from './ProgressionChart'\r\n\r\nclass ProgressionDashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        historicalLifts: [],\r\n        countoflifts: null,\r\n        liftLogData: []\r\n\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n    var historicallogresponse = await axios.get('/api/historicallog');\r\n    var countoflifts = await axios.get('/api/numberoflifts');\r\n    this.setState({historicalLifts: historicallogresponse.data, countoflifts: countoflifts.data[0].count});\r\n    await this.groupLiftData();\r\n\r\n }\r\n\r\n groupLiftData = async  () => {\r\n    var LiftLogData = [];\r\n    for(var x = 1; x <= this.state.countoflifts; x++){\r\n        LiftLogData.push(await this.filterResponses(this.state.historicalLifts, x));\r\n    }\r\n    this.setState({liftLogData: LiftLogData});\r\n }\r\n\r\n filterResponses = (historicalLifts, x) => {\r\n    return historicalLifts.filter(lift => lift.liftid === x);\r\n }\r\n \r\n  render() {\r\n    const {liftLogData} = this.state;\r\n\r\n    if(liftLogData){\r\n      var ProgressionCharts = liftLogData.map((lift) => {\r\n        let liftdates = [];\r\n        let liftdata = [];\r\n        let lifttitle = \"\"\r\n        for(var y = 0; y < lift.length; y++){\r\n          console.log(lift[y].length)\r\n          liftdates.push(lift[y].date)\r\n          liftdata.push(lift[y].sets * lift[y].reps * lift[y].weight)\r\n          lifttitle = lift[y].lifttitle\r\n        }\r\n        let data = {\r\n          \"labels\": liftdates,\r\n          \"datasets\": [\r\n            {\r\n              \"label\": \"Total Weight\",\r\n              \"data\": liftdata,\r\n              \"fill\": false,\r\n              \"backgroundColor\": \"#00FF00\",\r\n              \"borderColor\": \"#00FF00\"\r\n            }\r\n          ],\r\n        }\r\n        return(\r\n          <ProgressionChart data={data} title={lifttitle}/>\r\n        )\r\n      })\r\n    }\r\n    \r\n\r\n    return (\r\n      <>\r\n      <Container>\r\n        {ProgressionCharts}\r\n      </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProgressionDashboard;","\r\nimport './App.css';\r\nimport React from 'react';\r\nimport PickWorkoutComponent from './Components/PickWorkoutComponent'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport ProgressionDashboard from './Components/ProgressionDashboard';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Router basename=\"/\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={PickWorkoutComponent}/>\r\n            <Route exact path=\"/progression\" component={ProgressionDashboard}/>\r\n          </Switch>\r\n        </Router>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}