{"version":3,"sources":["Components/LiftComponent.jsx","Components/WorkoutComponent.jsx","Components/WorkoutCard.jsx","Components/PickWorkoutComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["LiftComponent","props","handleSetsChange","e","setState","Sets","target","value","handleRepsChange","Reps","handleWeightChange","Weight","handleNotesChange","Notes","handleSaveLift","a","today","Date","updatedLift","WorkoutLiftLogID","state","axios","put","data","successfullySaved","Title","title","sets","reps","weight","notes","this","redDot","className","greenDot","Form","Group","as","Row","Col","xs","Label","column","Control","onChange","type","Button","variant","onClick","Component","WorkoutComponent","componentDidMount","get","response","liftData","recordset","selectedWorkoutID","id","liftList","map","lift","WorkoutID","LiftTitle","Container","workoutTitle","WorkoutCard","Card","handleCardClick","Body","style","color","PickWorkoutComponent","workoutList","selectedWorkoutTitle","showSelectedWorkoutComponent","View","workoutCards","workout","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dd30b68.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport stylesheet from '../assets/LiftComponent.css'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass LiftComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      Title: props.title,\r\n      Sets: props.sets,\r\n      Reps: props.reps,\r\n      Weight: props.weight,\r\n      Notes: props.notes,\r\n      WorkoutLiftLogID: props.WorkoutLiftLogID,\r\n      successfullySaved: false,\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //textbox handlers\r\nhandleSetsChange = (e) => {\r\n  this.setState({Sets: e.target.value})\r\n}\r\nhandleRepsChange = (e) => {\r\n  this.setState({Reps: e.target.value})\r\n}\r\nhandleWeightChange = (e) => {\r\n  this.setState({Weight: e.target.value})\r\n}\r\nhandleNotesChange = (e) => {\r\n  this.setState({Notes: e.target.value})\r\n}\r\nhandleSaveLift = async () =>{\r\n  var today = new Date();\r\n  var updatedLift = {\r\n    WorkoutLiftLogID: this.state.WorkoutLiftLogID,\r\n    Sets: this.state.Sets,\r\n    Reps: this.state.Reps,\r\n    Weight: this.state.Weight,\r\n    Notes: this.state.Notes,\r\n    Date: today\r\n  }\r\n  var response = await axios.put('/api/workoutliftlog', updatedLift, null);\r\n  if(response.data === \"Fail\")\r\n  {\r\n    this.setState({successfullySaved: false});\r\n  }\r\n  else{\r\n    this.setState({successfullySaved: true});\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n  const{Title, Sets, Reps, Weight, Notes, successfullySaved} = this.state;\r\n\r\n  const redDot = (\r\n    <span className=\"redDot\"/>\r\n  )\r\n  const greenDot = (\r\n    <span className=\"greenDot\"/>\r\n  )\r\n    return (\r\n        <Form>\r\n        <Form.Group as={Row}>\r\n          <Col xs={8}>\r\n          <Form.Label> <h4>{Title}:</h4> </Form.Label> \r\n          </Col>\r\n          <Col xs={1}>\r\n          {successfullySaved === false ? redDot : greenDot}\r\n          </Col>\r\n        </Form.Group>\r\n            \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Sets:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleSetsChange} value={Sets}/>\r\n          </Col>\r\n        </Form.Group>\r\n      \r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Reps:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleRepsChange} value={Reps} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Weight:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control onChange={this.handleWeightChange} value={Weight} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column xs=\"5\">\r\n            Notes:\r\n          </Form.Label>\r\n          <Col xs=\"5\">\r\n            <Form.Control type=\"textarea\" onChange={this.handleNotesChange} value={Notes} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col>\r\n            <Button column xs={6} variant=\"success\" onClick={this.handleSaveLift}>\r\n            Save {Title}\r\n          </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default LiftComponent;","import React, {Component} from 'react';\r\nimport LiftComponent from './LiftComponent';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass WorkoutComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    liftData: [],\r\n    selectedWorkoutID: this.props.id,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/liftdata');\r\n    this.setState({\r\n      liftData: response.data.recordset });\r\n   \r\n\r\n }\r\n \r\n  render() {\r\n    const {liftData, selectedWorkoutID} = this.state;\r\n\r\n  const liftList = liftData.map((lift) => {\r\n    return(\r\n     lift.WorkoutID === selectedWorkoutID ?\r\n      <LiftComponent key={lift.WorkoutLiftLogID} WorkoutLiftLogID={lift.WorkoutLiftLogID} title={lift.LiftTitle} sets={lift.Sets} reps={lift.Reps} weight={lift.Weight} notes={lift.Notes}/> : null\r\n      \r\n    )\r\n  })\r\n    return (\r\n      <>\r\n      <Container>\r\n        <h1>{this.props.workoutTitle}</h1>\r\n        {liftList}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WorkoutComponent;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction WorkoutCard(props) {\r\n  return (  \r\n    <Card onClick={(e) => props.handleCardClick(e, props.title, props.id)}>\r\n    <Card.Body>\r\n    <Card.Title style={{color: 'black'}}> {props.title} </Card.Title>\r\n    </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WorkoutCard;\r\n","import React, {Component} from 'react';\r\nimport LiftComponent from './LiftComponent';\r\nimport {Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport WorkoutCard from './WorkoutCard'\r\nimport WorkoutComponent from './WorkoutComponent'\r\n\r\nclass PickWorkoutComponent extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n    workoutList: [],\r\n    selectedWorkoutTitle:null,\r\n    selectedWorkoutID: null,\r\n    showSelectedWorkoutComponent: false,\r\n    }\r\n  }\r\n\r\n\r\n componentDidMount = async () =>{\r\n   //make call to node server to get lift data from DB\r\n    var response = await axios.get('/api/workouts');\r\n    this.setState({workoutList: response.data.recordset});\r\n   \r\n\r\n }\r\n\r\n handleCardClick = (e, workoutTitle, id) => {\r\n    this.setState({\r\n        selectedWorkoutTitle: workoutTitle,\r\n        selectedWorkoutID: id,\r\n        showSelectedWorkoutComponent: true,\r\n    })\r\n\r\n  }\r\n \r\n  render() {\r\n    const {workoutList, selectedWorkoutID, selectedWorkoutTitle, showSelectedWorkoutComponent} = this.state;\r\n\r\n  const workoutCards = workoutList.map((workout) => {\r\n      return(\r\n        <div>\r\n        <WorkoutCard key={workout.WorkoutID} id={workout.WorkoutID} title={workout.Title} handleCardClick={this.handleCardClick}/>\r\n        <br/>\r\n        </div>\r\n    )\r\n })\r\n\r\n    let View;\r\n    //If a workout has not yet been selected, display our View as the options to select.\r\n    if(showSelectedWorkoutComponent === false)\r\n    {\r\n        View = ( \r\n        <div>\r\n        <h1>Select a Workout</h1>\r\n        {workoutCards.length > 0 ? workoutCards : null} \r\n        </div>) \r\n    }\r\n    else{ //Once a workout has been selected, display the Workout component in our view.\r\n        View = (\r\n            <WorkoutComponent key={selectedWorkoutID} id={selectedWorkoutID} workoutTitle={selectedWorkoutTitle}/>\r\n        ) \r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Container>\r\n      {showSelectedWorkoutComponent !== null ? View : null}\r\n      </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PickWorkoutComponent;","\nimport './App.css';\nimport WorkoutComponent from './Components/WorkoutComponent'\nimport PickWorkoutComponent from './Components/PickWorkoutComponent'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={PickWorkoutComponent}/>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}